rails new blogs
cd blogs
rails g model Blog name:string description:text
rails g model Post title:string content:text blog:references
rails g model Message author:string message:text post:references
rake db:migrate
rails c

5.times{
  User.create(
    first_name: Faker::Name.first_name,
    last_name: Faker::Name.last_name,
    email_address: Faker::Internet.email
  )
}

User.create(first_name:"Amy", last_name:"Tian", email_address:"a@tian.com")
User.create(first_name:"Bob", last_name:"Smith", email_address:"bob@smith.com")
User.create(first_name:"Emily", last_name:"Smith", email_address:"emily@smith.com")
User.create(first_name:"Rachel", last_name:"Boon", email_address:"r@b.com")
User.create(first_name:"test", last_name:"test", email_address:"test@tes.com")

Blog.create(name: "Furry Friends", description: "A blog for cute furries")
Blog.create(name: "Book Club", description: "Sharing my fav books")
Blog.create(name: "Foodie", description: "Sharing my fav meals")
Blog.create(name: "Stars", description: "Explore the galaxy with me")
Blog.create(name: "Science is cool", description: "Because yes, yes it is")

Owner.create(user:User.first, blog: Blog.find(1))
Owner.create(user:User.first, blog: Blog.find(2))
Owner.create(user:User.first, blog: Blog.find(3))

Owner.create(user:User.find(2), blog: Blog.find(4))
Owner.create(user:User.last, blog: Blog.find(5))

for i in 1..5
  Owner.create(user:User.find(3), blog: Blog.find(i))
end

1.upto(3){
  |i| Owner.create(
  user: User.first,
  blog: Blog.find(i)
  )
}

for i in 1..3
  User.first.posts.create(title: "POST BY USER1", content:"This is just a test!!", blog:Blog.find(2))
end

for i in 1..5
  User.find(2).posts.create(title: "POST BY USER2 for LAST BLOG", content:"This is just a test!!", blog:Blog.last)
end

User.find(3).posts.create(title: "POST BY USER3", content:"?!?!?!?", blog:Blog.first)
User.find(3).posts.create(title: "POST BY USER3", content:"?!?!?!?", blog:Blog.last)
User.find(3).posts.create(title: "POST BY USER3", content:"?!?!?!?", blog:Blog.find(3))

User.find(3).messages.create(author:User.find(3).full_name, message: "U3 commenting on 1st post!", post:Post.first)
User.find(3).messages.create(author:User.find(3).full_name, message: "U3 commenting on 1st post~~!", post:Post.first)

for i in 1..3
  User.find(3).messages.create(author:User.find(3).full_name, message: "U3 commenting on 2st post!", post:Post.find(2))
end

for i in 1..3
  User.find(4).messages.create(author:User.find(4).full_name, message: "U4 commenting on last post!", post:Post.last)
end

Post.update(2, user:User.last)
Post.update(2, content:"UPDATED~!")
User.find(3).blogs
User.find(3).posts
User.find(3).messages

Owner.update(1, blog:Blog.first, user:User.last)


---!!! Retrieve all posts associated with the first blog as well as who left these posts.

posts = Blog.first.posts.includes(:user)
posts[0].user <--- displays user info of the posts from the first blog

Blog.first.posts.joins(:user).select('*') <--- huge pain

---!!! Retrieve all messages associated with the first blog along with all the user information of those who left the messages.

messages = Blog.second.messages.includes(:user)
messages[0].user

---!!! Grab all user information of those that own the first blog (make this work by allowing Blog.first.owners to work).
users = Blog.first.owners.includes(:user)
users[0].user
users[1].user


user, blog, post, or a message.
